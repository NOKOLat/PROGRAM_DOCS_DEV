{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u306f\u3058\u3081\u306b","text":"<p>\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u6771\u4eac\u8fb2\u5de5\u5927\u5b66\u822a\u7a7a\u7814\u7a76\u4f1a (NOKOlat)\u306e\u30de\u30eb\u30c1\u30b3\u30d7\u30bf\u30fc\u90e8\u9580\u5411\u3051\u306b\u4f5c\u6210\u3059\u308b\uff0e \u96fb\u88c5\u73ed\u304c\u81ea\u52d5\u64cd\u7e26\u3092\u76ee\u6307\u3059\u306b\u3042\u305f\u3063\u3066\uff0c\u52c9\u5f37\u3059\u3079\u304d\u3053\u3068\u3092\u66f8\u3044\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3042\u308b\uff0e \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306fArduino\u3092\u7528\u3044\u308b\u304c\uff0c\u5b9f\u7528\u306b\u306f\u5411\u304b\u306a\u3044\u305f\u3081STM32\u30de\u30a4\u30b3\u30f3\u306a\u3069\u3092\u5225\u306b\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3059\u308b\uff0e</p>"},{"location":"#_2","title":"\u76ee\u6b21","text":""},{"location":"#arduino","title":"Arduino\u3092\u7528\u3044\u305f\u5b66\u7fd2","text":"<ul> <li>Arduino\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9</li> <li>LED\u306e\u70b9\u6ec5</li> <li>PC\u3068\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1(UART)\u3092\u3057\u3088\u3046</li> <li>S.Bus\u3092\u53d7\u4fe1\u3057\u3066PC\u3078\u9001\u308d\u3046(\u4f5c\u6210\u4e2d)</li> <li>\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u30fc\u3092\u5236\u5fa1\u3059\u308b(PWM)</li> </ul>"},{"location":"#stm32","title":"STM32\u3092\u4f7f\u3046","text":"<ul> <li>\u74b0\u5883\u69cb\u7bc9\u304a\u3088\u3073L\u30c1\u30ab</li> <li>UART\u901a\u4fe1(\u30c4\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\u3092\u7fd2\u5f97\u3059\u308b)</li> <li>S.Bus\u3092\u53d7\u4fe1\u3059\u308b</li> <li>I2C\u901a\u4fe1</li> <li>\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u30fc\u3092\u5236\u5fa1\u3059\u308b(PWM)</li> </ul>"},{"location":"#stm32_1","title":"STM32\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3064\u3044\u3066","text":"<p>\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u7279\u306b\u6307\u5b9a\u306e\u306a\u3044\u9650\u308a\u3044\u304b\u306e\u74b0\u5883\u306b\u3066\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e</p> <ul> <li>Nucleo-64 F411RE</li> <li>STM32CubeIDE v1.13.2</li> </ul>"},{"location":"communication/","title":"\u901a\u4fe1","text":""},{"location":"communication/#uart","title":"UART","text":"<p>1\u5bfe1\u306e\u53cc\u65b9\u5411\u901a\u4fe1\u306b\u7528\u3044\u3089\u308c\u308b\u901a\u4fe1\u65b9\u5f0f\u3067\u3042\u308b\uff0e\u9001\u4fe1\u7528\uff0c\u53d7\u4fe1\u7528\u306b\u305d\u308c\u305e\u308c1\u672c\u306e\u4fe1\u53f7\u7dda\u304c\u5fc5\u8981\u3067\u3042\u308a\u5408\u8a08\u30672\u672c\u306e\u4fe1\u53f7\u7dda\u3092\u63a5\u7d9a\u3059\u308b\uff0e \u901a\u4fe1\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u9593\u3067\u540c\u3058\u8a2d\u5b9a\u306b\u3057\u306a\u3051\u308c\u3070\u901a\u4fe1\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e</p> <p>\u4e3b\u306a\u8a2d\u5b9a\u9805\u76ee\u306f\uff0c\u901a\u4fe1\u901f\u5ea6\u304a\u3088\u3073\u30d1\u30ea\u30c6\u30a3\u30d3\u30c3\u30c8\uff0c\u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u3067\u3042\u308b\uff0e \u901a\u4fe1\u901f\u5ea6\u306f9600bps\u3084115200bps\u304c\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\uff0e \u30d1\u30ea\u30c6\u30a3\u30d3\u30c3\u30c8\u306f\u901a\u4fe1\u306e\u8aa4\u308a\u3092\u691c\u51fa\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\uff0e\u9001\u4fe1\u30c7\u30fc\u30bf\uff18bit\u306b\u30d1\u30ea\u30c6\u30a3\u30d3\u30c3\u30c8 (1bit) \u3092\u4ed8\u4e0e\u3057\uff0c1byte\u306e\u30c7\u30fc\u30bf\u306e\u4e2d\u306b1\u304c\u5076\u6570\u500b\u3082\u3057\u304f\u306f\u5947\u6570\u500b\u3068\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3059\u308b\uff0e 1\u304c\u5076\u6570\u500b\u3068\u306a\u308b\u3068\u304deven parity\uff0c1\u304c\u5947\u6570\u500b\u3068\u306a\u308b\u3068\u304dodd parity\u3068\u8a00\u3046\uff0e</p> <p>\u304f\u308f\u3057\u304f\u306fROHM\u306eweb\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\uff0e</p>"},{"location":"communication/#sbus","title":"S.BUS","text":"<p>UART\u306b\u304a\u3044\u3066\u8a2d\u5b9a\u3092100000bps, even parity, 2\u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u3068\u3057\uff0c\u901a\u4fe1\u4fe1\u53f7\u3092\u53cd\u8ee2\u3055\u305b\u305f\u3082\u306e\u3092\u3044\u3046\uff0e Futaba\u306e\u53d7\u4fe1\u6a5f\u3092\u6271\u3046\u3068\u304d\u306b\uff0cS.BUS\u306b\u51fa\u4f1a\u3046\u3053\u3068\u304c\u591a\u3044\uff0e\u307e\u305f\uff0c\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f1\u65b9\u5411\u306e\u901a\u4fe1\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\uff0e NOT\u56de\u8def\u3092\u7528\u3044\u3066\u4fe1\u53f7\u3092\u53cd\u8ee2\u3055\u305b\u308b\u3053\u3068\u3067UART\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\uff0c\u30de\u30a4\u30b3\u30f3\u306a\u3069\u3067\u306fNOT\u56de\u8def\u3068\u5408\u308f\u305b\u3066\u4f7f\u7528\u3055\u308c\u308b\uff0e</p>"},{"location":"communication/#i2c","title":"I2C","text":"<p>\u30bb\u30f3\u30b5\u3068\u30de\u30a4\u30b3\u30f3\u3084\u30de\u30a4\u30b3\u30f3\u540c\u58eb\u306e\u901a\u4fe1\u306b\u4f7f\u7528\u3055\u308c\u308b\u901a\u4fe1\u65b9\u5f0f\u3067\u3042\u308b\uff0e\u30c7\u30fc\u30bf\u4fe1\u53f7\u306e\u7dda(SDA)\u3068\u4fe1\u53f7\u540c\u671f\u306e\u305f\u3081\u306e\u30af\u30ed\u30c3\u30af\u7dda(SCL)\u306e\uff12\u672c\u306e\u7dda\u3067\u69cb\u6210\u3055\u308c\u308b\u30d0\u30b9\u306b\u30c7\u30d0\u30a4\u30b9\u3092\u63a5\u7d9a\u3059\u308b\uff0e I2C\u306e\u7279\u5fb4\u306f\uff0c\uff11\u3064\u306e\u30d0\u30b9\u306b\u8907\u6570\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3067\u4efb\u610f\u306e\uff12\u30c7\u30d0\u30a4\u30b9\u9593\u306e\u901a\u4fe1\u304c\u53ef\u80fd\u306a\u3053\u3068\u3067\u3042\u308b\uff0e</p> <p>\u304f\u308f\u3057\u304f\u306fROHM\u306eweb\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\uff0e</p>"},{"location":"communication/#spi","title":"SPI","text":"<p>\u304f\u308f\u3057\u304f\u306fROHM\u306eweb\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\uff0e</p>"},{"location":"STM32/SBUS/","title":"3. S.BUS","text":""},{"location":"STM32/SBUS/#cubemx","title":"CubeMX","text":""},{"location":"STM32/SBUS/#sbusuart","title":"SBUS\u3092\u53d7\u4fe1\u3059\u308bUART\u306e\u8a2d\u5b9a","text":"<p>USART1(PA9, PA10)\u3092\u4f7f\u7528\u3059\u308b\uff0e \u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e</p> <ul> <li>Baud rate : 100000 Bits/s</li> <li>Parity : Even</li> <li> <p>Stop Bits : 2 </p> </li> <li> <p>DMA\u306e\u6709\u52b9\u5316 </p> </li> </ul>"},{"location":"STM32/SBUS/#uart","title":"\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306b\u51fa\u529b\u3059\u308b\u305f\u3081\u306eUART","text":""},{"location":"STM32/SBUS/#_1","title":"\u671f\u5f85\u3055\u308c\u308b\u52d5\u4f5c","text":"<p>\u30de\u30a4\u30b3\u30f3\u306e\u8d77\u52d5\u5f8c\u306b\uff0cLED\u304c1\u79d2\u9593\u306e\u70b9\u706f\u30fb\u6d88\u706f\u3092\u3057\u305f\u5f8c\u306bSBUS\u306e\u53d7\u4fe1\u3092\u958b\u59cb\u3059\u308b\uff0e SBUS\u3092\u6b63\u5e38\u306b\u53d7\u4fe1\u3067\u304d\u3066\u3044\u308b\u5834\u5408\u306f\uff0c\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306bSBUS\u3067\u53d7\u4fe1\u3057\u3066\u3044\u308b\u5024\u304c\u8868\u793a\u3055\u308c\u308b\uff0e</p>"},{"location":"STM32/SBUS/#_2","title":"\u30de\u30a4\u30b3\u30f3\u3068\u53d7\u4fe1\u6a5f\u306e\u63a5\u7d9a","text":"<p>\u30de\u30a4\u30b3\u30f3\u3068\u53d7\u4fe1\u6a5f\u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u56de\u8def\u4f8b\u3092\u4ee5\u4e0b\u306b\u793a\u3059\uff0e</p> <ul> <li>Vdd\u306b3.3V\u3092\u63a5\u7d9a\u3059\u308b</li> <li>Vss\u306bGND\u3092\u63a5\u7d9a\u3059\u308b</li> <li>\u62b5\u6297\u5024\u306f\\(1k\\Omega\\)\u7a0b\u5ea6\u3092\u4f7f\u7528\u3059\u308b</li> <li>\u56f3\u4e2d\u592e\u306e\u8a18\u53f7\u306fNchFET\u3092\u8868\u3057\u3066\u3044\u308b</li> <li>2N7000\u3092\u4f7f\u7528\u3057\uff0c\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f</li> </ul> <p></p>"},{"location":"STM32/SBUS/#_3","title":"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac","text":""},{"location":"STM32/SBUS/#hal_uart_receive_dmauart_handletypedef-huart-uint8_t-pdata-uint16_t-size","title":"HAL_UART_Receive_DMA(UART_HandleTypeDef huart, uint8_t pData, uint16_t Size)","text":"<p>\u3053\u306e\u95a2\u6570\u306fUART\u3092DMA(Direct memory access)\u30e2\u30fc\u30c9\u3067\u53d7\u4fe1\u3059\u308b\u95a2\u6570\u3067\u3042\u308b\uff0eDMA\u3067\u53d7\u4fe1\u3059\u308b\u3068\u304d\uff0c\u53d7\u4fe1\u5b8c\u4e86\u3092\u5f85\u305f\u305a\u306b\u4ed6\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u305f\u3081\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u5168\u4f53\u306e\u51e6\u7406\u901f\u5ea6\u306e\u89b3\u70b9\u3067\u512a\u308c\u3066\u3044\u308b\uff0eDMA\u306e\u7279\u5fb4\u306f\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u30e1\u30e2\u30ea\u30fc\u306b\u8ee2\u9001\u3059\u308b\u51e6\u7406\u3092CPU\u3092\u4f7f\u308f\u305a\u306b\u884c\u3046\u3053\u3068\u3067\u3042\u308b\uff0e\u53cd\u5bfe\u306b\uff0cDMA\u4ee5\u5916\u3067\u306f\u30c7\u30fc\u30bf\u30921\u30d0\u30a4\u30c8\u53d7\u4fe1\u3059\u308b\u3054\u3068\u306b\u30e1\u30e2\u30ea\u30fc\u306b\u8ee2\u9001\u3059\u308b\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\uff0e</p>"},{"location":"STM32/SBUS/#hal_uart_rxcpltcallbackuart_handletypedef-huart","title":"HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)","text":"<p>\u3053\u306e\u95a2\u6570\u306fDMA\u3082\u3057\u304f\u306fIT\u3067UART\u306b\u3088\u308b\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\u304c\u7d42\u4e86\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3067\u3042\u308b\uff0e\u3069\u306eUART\u306e\u901a\u4fe1\u304c\u7d42\u4e86\u3057\u305f\u304b\u306f\u5f15\u6570\u3092\u898b\u308b\u3068\u78ba\u8a8d\u3067\u304d\u308b\uff0e\u8907\u6570\u306eUART\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f<code>if(huart==&amp;huart2){}</code>\u306e\u3088\u3046\u306b\u5834\u5408\u5206\u3051\u3092\u884c\u3046\uff0e</p>"},{"location":"STM32/SBUS/#class-sbus","title":"class SBUS{}","text":"<p>c++\u306eclass\u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066SBUS\u306b\u95a2\u4fc2\u3059\u308b\u51e6\u7406\u306a\u3069\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\uff0e\u898b\u6163\u308c\u306a\u3044\u95a2\u6570\u3084\u66f8\u304d\u65b9\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\uff0cc++\u306e\u6a5f\u80fd\u3092\u89e3\u8aac\u3059\u308b\u3068\u9577\u304f\u306a\u308b\u306e\u3067\u7701\u7565\u3057\u307e\u3059\uff0e\u53e3\u982d\u3067\u89e3\u8aac\u3059\u308b\u306e\u3067\uff0c\u89e3\u8aac\u304c\u5fc5\u8981\u306a\u3089\u76f4\u63a5\u805e\u3044\u3066\u304f\u3060\u3055\u3044\uff0e</p>"},{"location":"STM32/SBUS/#_4","title":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9","text":""},{"location":"STM32/SBUS/#wrappercpp","title":"wrapper.cpp","text":"<pre><code>#include \"wrapper.hpp\"\n#include \"SBUS.hpp\"\n#include &lt;functional&gt;\n#include &lt;string&gt;\n\n#include &lt;usart.h&gt;\n#include &lt;gpio.h&gt;\n\nnokolat::SBUS sbus(&amp;huart1);\n\nstd::array&lt;int16_t, 8&gt; buffer;\n\nvoid init(void){\n    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5, GPIO_PIN_SET);\n    HAL_Delay(1000);\n    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5, GPIO_PIN_RESET);\n    HAL_Delay(1000);\n    HAL_UART_Receive_DMA(&amp;huart1, sbus.getReceiveBufferPtr(),sbus.getDataLen());\n}\n\nvoid loop(void){\n    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5, GPIO_PIN_RESET);\n}\n\nvoid HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){\n    HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_5);\n    sbus.setNeedParse();\n\n    std::string str;\n    for(uint8_t n=0; n&lt;18; n++){\n        str = std::to_string(sbus.getData(n+1)) + \" \";\n        HAL_UART_Transmit(&amp;huart2, (uint8_t *)str.c_str(), str.length(), 10);\n    }\n    str = \"\\n\";\n    HAL_UART_Transmit(&amp;huart2, (uint8_t *)str.c_str(), str.length(), 10);\n\n    HAL_UART_Receive_DMA(&amp;huart1, sbus.getReceiveBufferPtr(),sbus.getDataLen());\n\n}\n</code></pre>"},{"location":"STM32/SBUS/#sbushpp","title":"SBUS.hpp","text":"<pre><code>#ifndef INC_SBUS_HPP_\n#define INC_SBUS_HPP_\n\n#include &lt;array&gt;\n#include &lt;iterator&gt;\n\n#include \"usart.h\"\n\nnamespace nokolat {\n\nclass SBUS {\npublic:\n    SBUS(UART_HandleTypeDef *husart = nullptr)\n    :husart(husart){}\n    virtual ~SBUS(){};\n\n    auto getBufferIterator(){\n        return receiveBuffer.cbegin();\n    }\n\n    uint8_t *getReceiveBufferPtr() {\n        return (uint8_t*)receiveBuffer.data();\n    }\n\n    void enableReciveIT(){\n        needParse = true;\n        HAL_UART_Receive_IT(husart, receiveBuffer.data(), 25);\n    }\n\n    int16_t getData(const uint8_t channel){\n        if(channel &gt; 18 or channel &lt; 1) return -1;\n        if(needParse){\n            parse();\n        }\n\n        return data[channel-1];\n    }\n\n    constexpr uint8_t getDataLen(){\n        return length;\n    }\n\n    void setNeedParse(bool arg=true){\n        needParse = arg;\n    }\n\nprivate:\n    std::array&lt;uint8_t,25&gt; receiveBuffer;\n    std::array&lt;uint16_t,18&gt; data;\n    bool needParse;\n    UART_HandleTypeDef *husart;\n    const uint8_t length = 25;\n\n    void parse();\n};\n\n} /* namespace nokolat */\n\n#endif /* INC_SBUS_HPP_ */\n</code></pre>"},{"location":"STM32/SBUS/#sbuscpp","title":"SBUS.cpp","text":"<pre><code>#include \"SBUS.hpp\"\n\nnamespace nokolat{\nvoid SBUS::parse(){\n        data[0] = receiveBuffer[1];\n        data[0] += ((int16_t)receiveBuffer[2] &amp; 0b111)&lt;&lt;8;\n\n        data[1] = receiveBuffer[2]&gt;&gt;3;\n        data[1] += ((int16_t)receiveBuffer[3] &amp; 0b111111)&lt;&lt;5;\n\n        data[2] = receiveBuffer[3]&gt;&gt;6;\n        data[2] += ((int16_t)receiveBuffer[4])&lt;&lt;2;\n        data[2] += ((int16_t)receiveBuffer[5] &amp; 0b1)&lt;&lt;10;\n\n        data[3] = receiveBuffer[5]&gt;&gt;1;\n        data[3] += ((int16_t)receiveBuffer[6] &amp; 0b1111)&lt;&lt;7;\n\n        data[4] = receiveBuffer[6]&gt;&gt;4;\n        data[4] += ((int16_t)receiveBuffer[7] &amp; 0b1111111)&lt;&lt;4;\n\n        data[5] = receiveBuffer[7]&gt;&gt;7;\n        data[5] += ((int16_t)receiveBuffer[8])&lt;&lt;1;\n        data[5] += ((int16_t)receiveBuffer[9] &amp; 0b11)&lt;&lt;9;\n\n        data[6] = receiveBuffer[9]&gt;&gt;2;\n        data[6] += ((int16_t)receiveBuffer[10] &amp; 0b11111)&lt;&lt;6;\n\n        data[7] = receiveBuffer[10]&gt;&gt;5;\n        data[7] += ((int16_t)receiveBuffer[11])&lt;&lt;3;\n\n        data[8] = receiveBuffer[12];\n        data[8] += ((int16_t)receiveBuffer[13] &amp; 0b111)&lt;&lt;8;\n\n        data[9] = receiveBuffer[13]&gt;&gt;3;\n        data[9] += ((int16_t)receiveBuffer[14] &amp; 0b111111)&lt;&lt;8;\n\n        data[10] = receiveBuffer[14]&gt;&gt;6;\n        data[10] += ((int16_t)receiveBuffer[15])&lt;&lt;2;\n        data[10] += ((int16_t)receiveBuffer[16] &amp; 0b1)&lt;&lt;10;\n\n        data[11] = receiveBuffer[16]&gt;&gt;1;\n        data[11] += ((int16_t)receiveBuffer[17] &amp; 0b1111)&lt;&lt;7;\n\n        data[12] = receiveBuffer[17]&gt;&gt;4;\n        data[12] += ((int16_t)receiveBuffer[18] &amp; 0b1111111)&lt;&lt;4;\n\n        data[13] = receiveBuffer[18]&gt;&gt;7;\n        data[13] += ((int16_t)receiveBuffer[19])&lt;&lt;1;\n        data[13] += ((int16_t)receiveBuffer[20] &amp; 0b11)&lt;&lt;9;\n\n        data[14] = receiveBuffer[20]&gt;&gt;2;\n        data[14] += ((int16_t)receiveBuffer[21] &amp; 0b11111)&lt;&lt;6;\n\n        data[15] = receiveBuffer[21]&gt;&gt;5;\n        data[15] += ((int16_t)receiveBuffer[22])&lt;&lt;3;\n\n        data[16] = receiveBuffer[23] &amp;0b1;\n        data[17] = receiveBuffer[23] &amp;0b10;\n\n        needParse = false;\n    }\n}\n</code></pre>"},{"location":"STM32/SBUS/#reference","title":"Reference","text":"<p>Ssample code</p>"},{"location":"STM32/environmentSetUp/","title":"1. \u74b0\u5883\u69cb\u7bc9\u3068L\u30c1\u30ab","text":"<p>STM\u30de\u30a4\u30b3\u30f3\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u969b\u306b\u5fc5\u8981\u3068\u306a\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\u30fb\u5b9f\u884c\u307e\u3067\u3092\u89e3\u8aac\u3059\u308b\uff0e</p>"},{"location":"STM32/environmentSetUp/#_1","title":"\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u3053\u3053\u3067\u306f\uff0c\u30de\u30a4\u30b3\u30f3\u306e\u30d7\u30ed\u30b0\u30e9\u3092\u66f8\u304f\u306b\u3042\u305f\u3063\u3066\u6709\u76ca\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u7d39\u4ecb\u3059\u308b\uff0e\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u4f7f\u7528\u3057\u306a\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3082\u5165\u3063\u3066\u3044\u308b\u305f\u3081\uff0c\u3053\u3053\u306b\u7d39\u4ecb\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0e\u305f\u3060\u3057\uff0cSTM32CubeIDE\u3060\u3051\u306f\u5fc5\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307b\u3057\u3044\uff0e</p> <p>ST\u793e\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u306f\u540d\u524d\uff0c\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u5165\u529b\u3082\u3057\u304f\u306f\uff0c\u30ed\u30b0\u30a4\u30f3\u304c\u5fc5\u8981\u3068\u306a\u308b\uff0e \u3053\u3053\u3067\u306f\uff0c\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\uff0e</p>"},{"location":"STM32/environmentSetUp/#stm32cubeide","title":"STM32CubeIDE","text":"<p>\u672c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306fSTM32\u7528\u7d71\u5408\u958b\u767a\u74b0\u5883\u3067\u3042\u308a\uff0c\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u8a2d\u5b9a\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u8fbc\u307f\uff0c\u30c7\u30d0\u30c3\u30af\u307e\u3067\u3092\u4e00\u8cab\u3057\u3066\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0eSTM\u30de\u30a4\u30b3\u30f3\u306e\u958b\u767a\u3092\u884c\u3046\u3046\u3048\u3067\u307b\u307c\u5fc5\u9808\u3068\u306a\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3042\u308b\uff0e</p> <p>web\u30b5\u30a4\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3089 \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u5165\u624b \u3088\u308a\u5404\u81ea\u306e\u74b0\u5883\u306b\u5408\u3046\u6700\u65b0\u306e\u3082\u306e\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307b\u3057\u3044\uff0eWindows\u3067\u3042\u308c\u3070 STM32CubeIDE-Win \u304c\u8a72\u5f53\u3059\u308b\uff0e</p>"},{"location":"STM32/environmentSetUp/#stm-studio","title":"STM Studio","text":"<p>\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306e\u5024\u3092\u307b\u307c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3042\u308b\uff0e\u8a18\u4e8b\u306e\u57f7\u7b46\u6642\u70b9\u306b\u304a\u3044\u3066 NRND \u3068\u306a\u3063\u3066\u3044\u308b\u305f\u3081\uff0c\u8fd1\u3044\u3046\u3061\u306b\u63d0\u4f9b\u304c\u7d42\u4e86\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\uff0e\u5f8c\u7d99\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u3057\u3066STM32CubeMonitor\u304c\u5b58\u5728\u3059\u308b\uff0e</p>"},{"location":"STM32/environmentSetUp/#stm32cubemonitor","title":"STM32CubeMonitor","text":"<p>\u52d5\u4f5c\u4e2d\u306e\u30de\u30a4\u30b3\u30f3\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3042\u308b\uff0e\u7b46\u8005\u306f\u672c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u3042\u307e\u308a\u89e6\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u8a73\u3057\u3044\u3053\u3068\u306f\u5206\u304b\u3089\u306a\u3044\uff0e</p>"},{"location":"STM32/environmentSetUp/#stm32cubeprogrammer","title":"STM32CubeProgrammer","text":"<p>\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u30de\u30a4\u30b3\u30f3\u306b\u66f8\u304d\u8fbc\u3080\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3042\u308b\uff0e\u30de\u30a4\u30b3\u30f3\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306fSTM32CubeIDE\u3067\u3082\u53ef\u80fd\u3067\u3042\u308b\u304c\uff0c\u3053\u3061\u3089\u306e\u65b9\u304c\u9ad8\u6a5f\u80fd\u3067\u3042\u308b\uff0e</p>"},{"location":"STM32/environmentSetUp/#stm32cubeidel","title":"STM32CubeIDE\u3092\u4f7f\u3063\u3066L\u30c1\u30ab\u3092\u3059\u308b","text":"<p>\u300cL\u30c1\u30ab\u300d\u3068\u306fLED\u3092\u70b9\u6ec5\u3055\u305b\u308b\u3053\u3068\u3092\u8a00\u3046\uff0e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3093\u3060\u3053\u3068\u304c\u3042\u308c\u3070 \"Hello World\" \u306b\u51fa\u4f1a\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3046\u304c\uff0cL\u30c1\u30ab\u306f\u305d\u308c\u306e\u30de\u30a4\u30b3\u30f3\u7248\u3060\u3068\u8003\u3048\u3066\u307b\u3057\u3044\uff0e</p>"},{"location":"STM32/environmentSetUp/#stm32cubeide_1","title":"STM32CubeIDE\u306e\u8d77\u52d5","text":"<p> 1. STM32CubeIDE\u3092\u8d77\u52d5\u3059\u308b\u3068\uff0cLauncher\u304c\u8868\u793a\u3055\u308c\u308b 2. workspace\u306e\u9078\u629e\u3092\u3059\u308b</p> <p>\"workspace\" \u3068\u306fSTM32CubeIDE\u3067\u4f5c\u6210\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7f6e\u304f\u5834\u6240\u3067\u3042\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e <code>Launch</code> \u3092\u62bc\u3057\u3066\u554f\u984c\u306a\u3044\uff0e 3. STM32CubeIDE\u304c\u8d77\u52d5\u304c\u5b8c\u4e86\u3059\u308b \u521d\u56de\u8d77\u52d5\u6642\u306f <code>Infomation Center</code> \u304c\u958b\u304b\u308c\u3066\u3044\u308b\u304c\uff0c\u7279\u306b\u5fc5\u8981\u306a\u3044\u306e\u3067\u305d\u306e\u30bf\u30d6\u306f\u6d88\u3057\u3066\u3088\u3044\uff0e</p>"},{"location":"STM32/environmentSetUp/#project","title":"Project\u306e\u4f5c\u6210","text":"<ol> <li>\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u304b\u3089 <code>File/New/STM32 Project</code> \u3092\u9078\u629e\u3059\u308b <p>\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u81ea\u52d5\u3067\u884c\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308b</p> </li> <li>\u30de\u30a4\u30b3\u30f3\u306e\u9078\u629e\u3092\u884c\u3046 <ol> <li><code>Board Selector</code>\u30bf\u30d6\u3092\u9078\u629e\u3059\u308b</li> <li><code>Commercial Part Number</code>\u306b \"NUCLEO-F446RE\"\u3068\u5165\u529b\u3059\u308b</li> <li>\u30dc\u30fc\u30c9\u3092\u9078\u629e\u3059\u308b</li> <li>\u6b21\u3078\u9032\u3080   </li> </ol> </li> <li><code>Project Name</code>\u3092\u5165\u529b\u3059\u308b <p></p> </li> </ol> <p>\u4ee5\u4e0a\u3067\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u306f\u7d42\u308f\u308a\u3067\u3042\u308b\uff0e3\u306e\u5f8c\u3067\u3044\u304f\u3064\u304b\u30c0\u30a4\u30a2\u30ed\u30b0\u30dc\u30c3\u30af\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u304c\uff0c\u3059\u3079\u3066 <code>Yes/OK</code> \u3092\u9078\u3079\u3070\u554f\u984c\u306a\u3044\uff0e</p>"},{"location":"STM32/environmentSetUp/#_2","title":"\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306e\u8a2d\u5b9a","text":"<p>\u3053\u3053\u3067\u306f\uff0c\u30de\u30a4\u30b3\u30f3\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u306e\u3046\u3061 \u4f55\u3092\u4f7f\u7528\u3059\u308b\u304b \u3068 \u3069\u306e\u30d4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u304b \u3092\u8a2d\u5b9a\u3059\u308b\uff0e\u4eca\u56de\u306fNucleo\u30dc\u30fc\u30c9\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308bLED\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\uff0c\u3053\u3053\u3067\u306e\u8a2d\u5b9a\u4e8b\u9805\u306f\u7279\u306b\u306a\u3044\u304c\uff0c\u753b\u9762\u306e\u8aac\u660e\u3060\u3051\u8a18\u8f09\u3057\u3066\u304a\u304f\uff0e</p> <p>\u8d64\u3067\u56f2\u308f\u308c\u305f\u90e8\u5206\u306b\u306f\u30de\u30a4\u30b3\u30f3\u304c\u642d\u8f09\u3057\u3066\u3044\u308b\u6a5f\u80fd\u304c\u4e00\u89a7\u5f62\u5f0f\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\uff0e\u3053\u3053\u304b\u3089\u8a2d\u5b9a\u3057\u305f\u3044\u9805\u76ee\u3092\u9078\u629e\u3059\u308b\u3068\uff0c\u9ec4\u8272\u3067\u56f2\u308f\u308c\u305f\u90e8\u5206\u304c\u8868\u793a\u3055\u308c\u308b\uff0e\u3053\u3053\u3067\u306f\uff0c\u5404\u6a5f\u80fd\u306e\u8a2d\u5b9a\u304c\u3067\u304d\u308b\uff0e</p> <p>\u9752\u3067\u56f2\u308f\u308c\u305f\u90e8\u5206\u3067\u306f\u30de\u30a4\u30b3\u30f3\u306e\u3069\u306e\u30d4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u304b\u3092\u78ba\u8a8d\u30fb\u8a2d\u5b9a\u3067\u304d\u308b\uff0e\u307e\u305f\uff0c\u5404\u30d4\u30f3\u306b\u306fPA0,PA1,...,PC15,... \u306e\u3088\u3046\u306b\u540d\u524d\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\uff0e\u3053\u306e\u540d\u524d\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u969b\u306b\uff0c\u30d4\u30f3\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308b\uff0e</p> <p><code>PA5</code>\uff08\u4e0b\u306e\u5217\u306e\u5de6\u304b\u30895\u756a\u76ee\uff09 \u306b <code>LD2[Green Led]</code>\u3068\u3042\u308b\uff0e\u3053\u306e\u30d4\u30f3\u304c\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u70b9\u6ec5\u3055\u305b\u308bLED\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\uff0e\u3044\u307e\u306f\u7279\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3053\u306e\u30bf\u30d6\u306f\u9589\u3058\u3066\u3088\u3044\uff0e</p> <p></p>"},{"location":"STM32/environmentSetUp/#_3","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3068\u304d\uff0c\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3068\u304d\u306b\uff0c\u305d\u306e\u8a2d\u5b9a\u3092\u53cd\u6620\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\uff0e\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3068\u30e6\u30fc\u30b6\u30fc\u304c\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u533a\u5225\u3059\u308b\u305f\u3081\u306b\uff0c\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u3044\u7bc4\u56f2\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u305f\u3081\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\uff0e <code>/* USER CODE BEGIN xxxxx */</code> \u3068 <code>/* USER CODE END xxxxx */</code> \u306e\u9593\u306e\u8a18\u8ff0\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u308b\uff0e</p> <p><code>Project Name/Core/Src/main.c</code>\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u304f\uff0e\u7de8\u96c6\u304c\u5fc5\u8981\u306a\u90e8\u5206\u3092\u4ee5\u4e0b\u306b\u793a\u3059\uff0e</p> <pre><code> /* USER CODE BEGIN WHILE */\n  while (1)\n  {\n    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);\n    HAL_Delay(500);\n    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);\n    HAL_Delay(500);\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n  }\n  /* USER CODE END 3 */\n</code></pre>"},{"location":"STM32/environmentSetUp/#refarences","title":"Refarences","text":"<ul> <li>Sample Code (Github)</li> </ul>"},{"location":"STM32/serial/","title":"2. UART\uff08Serial\u901a\u4fe1\uff09\u3068\u30c4\u30fc\u30eb\u306e\u4f7f\u3044\u65b9","text":""},{"location":"STM32/serial/#_1","title":"\u76ee\u6a19","text":"<ul> <li>STM32CubeIDE\u306b\u304a\u3051\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306e\u5b9a\u5f62\u4f5c\u696d\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b</li> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u304b\u3089Wrapper\u306e\u4f5c\u6210\u307e\u3067\u3092\u5b9a\u5f62\u4f5c\u696d\u3068\u3059\u308b</li> <li>HAL\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u898f\u5247\u3092\u77e5\u308b</li> <li>UART\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b</li> </ul>"},{"location":"STM32/serial/#_2","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210","text":"<ol> <li>\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u304b\u3089 <code>File/New/STM32 Project</code> \u3092\u9078\u629e\u3059\u308b <p>\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u81ea\u52d5\u3067\u884c\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308b</p> </li> <li>\u30de\u30a4\u30b3\u30f3\u306e\u9078\u629e\u3092\u884c\u3046 <ol> <li><code>Commercial Part Number</code>\u306b \"F446RE\"\u3068\u5165\u529b\u3059\u308b</li> <li><code>STM32F446RET6</code>\u3092\u9078\u629e\u3059\u308b</li> <li>\u6b21\u3078\u9032\u3080</li> </ol> </li> <li><code>Project Name</code>\u3092\u5165\u529b\u3059\u308b <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306f\u81ea\u5206\u3067\u5206\u304b\u308c\u3070\u4f55\u3067\u3082\u826f\u3044\u3067\u3059\uff0e \u7279\u306b\u3053\u3060\u308f\u308a\u304c\u306a\u3044\u306a\u3089<code>UART</code>\u3068\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e</p> </li> <li><code>Targeted Language</code>\u3092<code>c++</code>\u306b\u3059\u308b</li> </ol>"},{"location":"STM32/serial/#cubemx","title":"\u30de\u30a4\u30b3\u30f3\u306e\u8a2d\u5b9a\uff08CubeMX\uff09","text":"<ol> <li>conecctibity\u304b\u3089USART2\u3092\u9078\u629e\u3059\u308b</li> <li>Mode\u3092<code>Asynchronous</code>\u306b\u8a2d\u5b9a\u3059\u308b</li> <li><code>Baud Rate</code>\u3092<code>115200</code>\u306b\u8a2d\u5b9a\u3059\u308b</li> <li>\u30de\u30a4\u30b3\u30f3\u306e<code>PA2, PA3</code>\u304cUART\u6a5f\u80fd\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b </li> <li>\u5199\u771f\u3092\u53c2\u8003\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b <p>\u3053\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u7b49\u3092\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff0e  \u30de\u30a4\u30b3\u30f3\u306e\u8a2d\u5b9a\u306f<code>&lt;Project Name&gt;.ioc</code>\u306e\u3088\u3046\u306b\u62e1\u5f35\u5b50\u304cioc\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u30de\u30a4\u30b3\u30f3\u306e\u8a2d\u5b9a\u306e\u753b\u9762\u304c\u958b\u304f\uff0e</p> </li> </ol>"},{"location":"STM32/serial/#_3","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","text":"<p><code>wrapper.hpp</code>\u3068<code>main.c</code>\u306f\u540c\u3058\u5185\u5bb9\u306a\u306e\u3067\uff0c\u6b21\u56de\u4ee5\u964d\u306e\u8cc7\u6599\u3067\u306f\u7701\u7565\u3059\u308b\uff0e</p>"},{"location":"STM32/serial/#wrapper","title":"Wrapper\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":"<p>\u672c\u74b0\u5883\u3067\u306fmain\u95a2\u6570\u304cmain.c\uff08C\u8a00\u8a9e\uff09\u306b\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\uff0cc++\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306bWrapper\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e 1. <code>Core/Inc</code>\u306b<code>wrapper.hpp</code>\u3092\u4f5c\u308b 2. <code>Core/Src</code>\u306b<code>wrapper.cpp</code>\u3092\u4f5c\u308b</p>"},{"location":"STM32/serial/#wrapperhpp","title":"wrapper.hpp","text":"<p>c++\u3068c\u8a00\u8a9e\u3092\u7e4b\u3050\u305f\u3081\u306e\u95a2\u6570\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3092\u3057\u3066\u3044\u308b\uff0e<code>extern \"C\" {}</code>\u3067\u56f2\u308f\u308c\u305f\u95a2\u6570\u306f\u5185\u90e8\u7684\u306bc\u8a00\u8a9e\u3068\u540c\u69d8\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u305f\u3081\uff0cC\u8a00\u8a9e\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e\u57fa\u672c\u7684\u306b\u306f\uff0c\u5fc5\u8981\u306a\u6a5f\u80fd\u306f\u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3082\u540c\u3058\u3067\u3042\u308b\u305f\u3081\uff0c\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u30b3\u30d4\u30fc\u3057\u3066\u4f7f\u3044\u307e\u308f\u3059\u3053\u3068\u304c\u591a\u3044\uff0e</p>"},{"location":"STM32/serial/#wrappercpp","title":"wrapper.cpp","text":"<p>Arduino\u74b0\u5883\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u304d\u3068\u540c\u69d8\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff0e</p>"},{"location":"STM32/serial/#hal","title":"HAL\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u89e3\u8aac","text":""},{"location":"STM32/serial/#_4","title":"\u547d\u540d\u898f\u5247","text":"<p>STM\u30de\u30a4\u30b3\u30f3\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u4f7f\u7528\u3059\u308b\u95a2\u6570\u7fa4\u306e\u3053\u3068\u3092\"HAL\u30e9\u30a4\u30d6\u30e9\u30ea(HAL)\"\u3068\u547c\u3076\uff0e\u95a2\u6570\u306e\u547d\u540d\u898f\u5247\u306f\u4e00\u8cab\u3057\u3066\u4ee5\u4e0b\u306b\u5f93\u3063\u3066\u3044\u308b\uff0e</p> <pre><code>HAL_&lt;periferal name&gt;_&lt;behavior&gt;(&lt;periferal handler&gt;,...);\n</code></pre> <p>''\u306f<code>UART</code>\u3084<code>GPIO</code>\u306a\u3069\u306e\u30de\u30a4\u30b3\u30f3\u306e\u6a5f\u80fd\u306e\u540d\u524d\u3067\u3042\u308b\uff0e <code>&lt;behaviot&gt;</code>\u306f\u3069\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3092\u3059\u308b\u304b\u3092\u793a\u3057\u3066\u3044\u308b\uff0e\u4f8b\u3048\u3070\uff0c\u901a\u4fe1\u3067\u53d7\u4fe1\u3092\u3059\u308b\u3068\u304d\u306b\u306f<code>Receive</code>\u306e\u3088\u3046\u306b\u306a\u308b\uff0e <code>&lt;behaviot&gt;</code>\u306f\u8907\u6570\u306e\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308b\uff0e"},{"location":"STM32/serial/#hal_uart_transmituart_handletypedef-huart-const-uint8_t-pdata-uint16_t-size-uint32_t-timeout","title":"<code>HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)</code>","text":"<p>UART\u3067\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3042\u308b\uff0e<code>pData</code>\u306b\u306f\u9001\u4fe1\u3057\u305f\u3044\u914d\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092\u6e21\u3059\uff0e<code>Size</code>\u306f\u9001\u4fe1\u30c7\u30fc\u30bf\u306e\u9577\u3055(byte)\u3067\u3042\u308b\uff0e <code>Timeout</code>\u3067\u6307\u5b9a\u3057\u305f\u6642\u9593(ms)\u3060\u3051\u901a\u4fe1\u304c\u7d42\u4e86\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u95a2\u6570\u3092\u7d42\u4e86\u3059\u308b\uff0e<code>Timeout</code>\u306f\u901a\u4fe1\u51e6\u7406\u304c\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3068\u304d\u306b\u51e6\u7406\u5168\u4f53\u304c\u30d5\u30ea\u30fc\u30ba\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306b\u3042\u308b\uff0e <code>huart</code>\u306b\u306f\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u6e21\u3059\uff0e\u30b3\u30fc\u30c9\u751f\u6210\u306e\u6642\u70b9\u3067uart1\u3067\u3042\u308c\u3070<code>huart1</code>\u306e\u3088\u3046\u306b\u81ea\u52d5\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\uff0e</p>"},{"location":"STM32/serial/#_5","title":"\u671f\u5f85\u3059\u308b\u52d5\u4f5c","text":"<p>\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306b\u63a5\u7d9a\u3057\u305f\u72b6\u614b\u3067\u8d77\u52d5\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\uff0e \u8d77\u52d5\u6642\u306b<code>Hello World</code>\u3068\u8868\u793a\u3055\u308c\uff0c\u305d\u306e\u5f8c\uff0c<code>count:&lt;number&gt;</code>\u3068\u8868\u793a\u3055\u308c\u304c\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u304f\uff0e"},{"location":"STM32/serial/#_6","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","text":""},{"location":"STM32/serial/#wrapperhpp_1","title":"wrapper.hpp","text":"<pre><code>#ifndef INC_WRAPPER_HPP_\n#define INC_WRAPPER_HPP_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nvoid init(void);\nvoid loop(void);\n\n#ifdef __cplusplus\n};\n#endif\n\n#endif /* INC_WRAPPER_HPP_ */\n</code></pre>"},{"location":"STM32/serial/#wrappercpp_1","title":"wrapper.cpp","text":"<pre><code>#include \"wrapper.hpp\"\n\n#include \"usart.h\"\n#include &lt;string&gt;\n\n\nvoid init(){\n    uint8_t str[] = \"Hello World\";\n    HAL_UART_Transmit(&amp;huart2, str,11,100);\n}\n\nvoid loop(){\n  HAL_Delay(100);\n    static uint16_t count = 0;\n    std::string str = \"count:\"+std::to_string(count++)+\"\\n\";\n    HAL_UART_Transmit(&amp;huart2, (uint8_t *)str.c_str(),str.length(),100);\n}\n</code></pre>"},{"location":"STM32/serial/#mainc","title":"main.c","text":"<pre><code>/* Private includes ----------------------------------------------------------*/\n/* USER CODE BEGIN Includes */\n#include \"wrapper.hpp\"\n/* USER CODE END Includes */\n</code></pre> <pre><code>  /* USER CODE BEGIN 2 */\n  init();\n  /* USER CODE END 2 */\n\n  /* Infinite loop */\n  /* USER CODE BEGIN WHILE */\n  while (1)\n  {\n      loop();\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n  }\n  /* USER CODE END 3 */\n</code></pre>"},{"location":"STM32/serial/#reference","title":"Reference","text":"<p>Sample code</p>"},{"location":"STM32/servo/","title":"4. SERVO","text":""},{"location":"STM32/servo/#_1","title":"\u76ee\u6a19","text":"<ul> <li>STM32\u30de\u30a4\u30b3\u30f3\u3067\u306e\u30bf\u30a4\u30de\u306e\u8a2d\u5b9a\u65b9\u6cd5\u3092\u5b66\u3076</li> </ul>"},{"location":"STM32/servo/#cubemx","title":"CubeMX\u306e\u8a2d\u5b9a","text":"<ol> <li>\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u9078\u629e\u3059\u308b <p>\u4eca\u56de\u306fPA8\u3092TIM1_CH1\u306b\u8a2d\u5b9a\u3059\u308b </p> </li> <li> <p>\u30af\u30ed\u30c3\u30af\u306e\u78ba\u8a8d\u304a\u3088\u3073\u8a2d\u5b9a</p> <p>Timer\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306fAPB1 Timer clock\u304a\u3088\u3073APB2 Timer clock\u306e\u5024\u3092\u78ba\u8a8d\u3059\u308b\uff0e \u3053\u306e\u5024\u306f\uff0cTimer\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\uff0e </p> </li> <li> <p>Timer\u306e\u8a2d\u5b9a</p> <ol> <li>TIM1\u306eChannel1\u3092<code>PWM Generation CH1</code>\u306b\u8a2d\u5b9a\u3059\u308b</li> <li>Prescaler\u3092<code>83</code>\u306b\u8a2d\u5b9a\u3059\u308b</li> <li>Counter Period\u3092<code>2500</code>\u306b\u8a2d\u5b9a\u3059\u308b </li> </ol> </li> </ol>"},{"location":"STM32/servo/#_2","title":"\u30b3\u30fc\u30c9\u89e3\u8aac","text":""},{"location":"STM32/servo/#hal_tim_pwm_starttim_handletypedef-htim-uint32_t-channel","title":"<code>HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)</code>","text":"<pre><code>/**\n  * @brief  Starts the PWM signal generation.\n  * @param  htim TIM handle\n  * @param  Channel TIM Channels to be enabled\n  *          This parameter can be one of the following values:\n  *            @arg TIM_CHANNEL_1: TIM Channel 1 selected\n  *            @arg TIM_CHANNEL_2: TIM Channel 2 selected\n  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected\n  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected\n  * @retval HAL status\n  */\n</code></pre>"},{"location":"STM32/servo/#__hal_tim_set_compare__handle__-__channel__-__compare__","title":"<code>__HAL_TIM_SET_COMPARE(__HANDLE__, __CHANNEL__, __COMPARE__)</code>","text":"<pre><code>/**\n  * @brief  Set the TIM Capture Compare Register value on runtime without calling another time ConfigChannel function.\n  * @param  __HANDLE__ TIM handle.\n  * @param  __CHANNEL__ TIM Channels to be configured.\n  *          This parameter can be one of the following values:\n  *            @arg TIM_CHANNEL_1: TIM Channel 1 selected\n  *            @arg TIM_CHANNEL_2: TIM Channel 2 selected\n  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected\n  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected\n  * @param  __COMPARE__ specifies the Capture Compare register new value.\n  * @retval None\n  */\n</code></pre>"},{"location":"STM32/servo/#_3","title":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9","text":""},{"location":"STM32/servo/#wrappercpp","title":"wrapper.cpp","text":"<pre><code>/* Pre-Processor Begin */\n#include \"wrapper.hpp\"\n#include &lt;cmath&gt;\n\n#include \"gpio.h\"\n#include \"tim.h\"\n/* Pre-Processor End */\n\n/* Variable Begin */\nconst uint16_t CENTER_VALUE = 1500;\nuint32_t count = 0;\n/* Variable End */\n\nvoid init(void){\n    HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1);\n    __HAL_TIM_SET_COMPARE(&amp;htim1, TIM_CHANNEL_1, CENTER_VALUE);\n}\n\nvoid loop(void){\n    float tmp = std::sin(count++*2.0*M_PI/1000.0)*500;\n    __HAL_TIM_SET_COMPARE(&amp;htim1, TIM_CHANNEL_1, uint16_t(CENTER_VALUE+tmp));\n    HAL_Delay(2);\n\n}\n</code></pre>"},{"location":"arduino/LED_Brink/","title":"2. L\u30c1\u30ab","text":""},{"location":"arduino/LED_Brink/#led","title":"LED\u306e\u70b9\u6ec5","text":"<p>source code\u3068\u540c\u3058\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u4efb\u610f\u306b\u5909\u66f4\u3057\u3066\u69cb\u3044\u307e\u305b\u3093\u304c\uff0c\u30b9\u30b1\u30c3\u30c1\u306e\u540d\u524d\u306f<code>Nucleo64_LED</code>\u3068\u3057\u307e\u3059\uff0e</p>"},{"location":"arduino/LED_Brink/#_1","title":"\u30dc\u30fc\u30c9\u306e\u9078\u629e","text":"<ul> <li> <p>\u30dc\u30fc\u30c9\u3092<code>Nucleo-64</code>\u306b\u8a2d\u5b9a\u3059\u308b </p> </li> <li> <p>Board Part Number\u3092<code>Nucleo F411RE</code>\u306b\u8a2d\u5b9a\u3059\u308b\uff0e \u4f7f\u7528\u3059\u308b\u30dc\u30fc\u30c9\u304c\u9055\u3046\u5834\u5408\u306f\u9069\u5b9c\u5909\u66f4\u3059\u308b\u3053\u3068\uff0e </p> </li> </ul>"},{"location":"arduino/LED_Brink/#_2","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u304a\u3088\u3073\u66f8\u304d\u8fbc\u307f","text":"<p>\u753b\u9762\u5de6\u4e0a\u306e\u66f8\u304d\u8fbc\u307f\u30dc\u30bf\u30f3\u3092\u62bc\u3059</p>"},{"location":"arduino/LED_Brink/#_3","title":"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac","text":""},{"location":"arduino/LED_Brink/#void-setup","title":"<code>void setup()</code>","text":"<p>Arduino\u306b\u304a\u3044\u3066\uff0c\u8d77\u52d5\u3057\u305f\u969b\u306b1\u56de\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\u95a2\u6570</p>"},{"location":"arduino/LED_Brink/#void-loop","title":"<code>void loop()</code>","text":"<p><code>setup()</code>\u306e\u5b9f\u884c\u5f8c\u306b\uff0c\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3055\u308c\u308b\u95a2\u6570</p>"},{"location":"arduino/LED_Brink/#void-pinmodeuint32_t-ulpin-uint32_t-ulmode","title":"<code>void pinMode(uint32_t ulPin, uint32_t ulMode)</code>","text":"<p><code>ulPin</code>\u3067\u6307\u5b9a\u3057\u305f\u30d4\u30f3\u306e\u30e2\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3042\u308b\uff0e \u30e2\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u3042\u308b\uff0e</p> <ul> <li>INPUT <ul> <li>\u5165\u529b\u30e2\u30fc\u30c9</li> </ul> </li> <li>OUTPUT<ul> <li>\u51fa\u529b\u30e2\u30fc\u30c9</li> </ul> </li> <li>INPUT_PULLUP<ul> <li>\u5165\u529b\u30e2\u30fc\u30c9</li> <li>\u30d7\u30eb\u30a2\u30c3\u30d7\u3000</li> </ul> </li> <li>INPUT_FLOATING<ul> <li>\u5165\u529b\u30e2\u30fc\u30c9</li> <li>\u30d5\u30ed\u30fc\u30c6\u30a3\u30f3\u30b0</li> </ul> </li> <li>INPUT_PULLDOWN<ul> <li>\u5165\u529b\u30e2\u30fc\u30c9</li> <li>\u30d7\u30eb\u30c0\u30a6\u30f3</li> </ul> </li> <li>OUTPUT_OPEN_DRAIN<ul> <li>\u51fa\u529b\u30e2\u30fc\u30c9</li> <li>\u30aa\u30fc\u30d7\u30f3\u30c9\u30ec\u30a4\u30f3</li> </ul> </li> </ul>"},{"location":"arduino/LED_Brink/#void-digitalwriteuint32_t-ulpin-uint32_t-dwval","title":"<code>void digitalWrite(uint32_t ulPin, uint32_t dwVal)</code>","text":"<p><code>ulPin</code>\u3067\u6307\u5b9a\u3057\u305f\u30d4\u30f3\u3092HIGH\u3082\u3057\u304f\u306fLOW\u306b\u8a2d\u5b9a\u3059\u308b\uff0e \u3044\u307e\uff0cHIGH\u306b\u3059\u308b\u3068LED\u304c\u70b9\u706f\u3059\u308b\uff0e</p>"},{"location":"arduino/LED_Brink/#led_1","title":"\u30b9\u30a4\u30c3\u30c1\u3068\u540c\u671f\u3057\u305fLED\u306e\u70b9\u706f","text":"<p>\u6700\u3082\u7c21\u5358\u306a\u5165\u529b\u3067\u3042\u308b\u30b9\u30a4\u30c3\u30c1\u3092\u3057\uff0c\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3057\u3066\u3044\u308b\u3068\u304dLED\u304c\u70b9\u706f\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3059\u308b\uff0e \u30b9\u30a4\u30c3\u30c1\u306fD12\u30d4\u30f3\u3068GND\u3092\u7e4b\u3050\u3088\u3046\u306b\u63a5\u7d9a\u3059\u308b\uff0e</p>"},{"location":"arduino/LED_Brink/#_4","title":"\u30b3\u30fc\u30c9\u89e3\u8aac","text":""},{"location":"arduino/LED_Brink/#int-digitalreaduint32_t-ulpin","title":"<code>int digitalRead(uint32_t ulPin)</code>","text":"<p><code>ulPin</code>\u3067\u6307\u5b9a\u3057\u305f\u30d4\u30f3\u304cHIGH\u3067\u3042\u308b\u304b\uff0cLOW\u3067\u3042\u308b\u304b\u3092\u53d6\u5f97\u3059\u308b\uff0e \u30d4\u30f3\u3092PULLUP\u306b\u3057\u3066\u3044\u308b\u306e\u3067\uff0cHIGH\u306e\u3068\u304d\u30b9\u30a4\u30c3\u30c1\u306f\u62bc\u3055\u308c\u3066\u3044\u306a\u3044\uff0e\u30b9\u30a4\u30c3\u30c1\u304c\u62bc\u3055\u308c\u308b\u3068LOW\u306b\u306a\u308b\uff0e</p>"},{"location":"arduino/LED_Brink/#source-code","title":"source code","text":""},{"location":"arduino/LED_Brink/#led_2","title":"LED\u306e\u70b9\u6ec5","text":"<pre><code>void setup() {\n  // put your setup code here, to run once:\n  pinMode(13, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  digitalWrite(13, HIGH);\n  delay(200);\n  digitalWrite(13, LOW);\n  delay(200);\n}\n</code></pre>"},{"location":"arduino/LED_Brink/#led_3","title":"\u30b9\u30a4\u30c3\u30c1\u3068\u540c\u671f\u3057\u305fLED\u306e\u70b9\u706f","text":"<pre><code>void setup() {\n  // put your setup code here, to run once:\n  pinMode(13, OUTPUT);\n  pinMode(12, INPUT_PULLUP);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  if(digitalRead(12)){\n    digitalWrite(13, HIGH);\n  }else{\n    digitalWrite(13, LOW);\n  }\n}\n</code></pre>"},{"location":"arduino/SBUS/","title":"4. S.BUS\u306e\u53d7\u4fe1","text":""},{"location":"arduino/SBUS/#_1","title":"\u76ee\u6a19","text":"<ul> <li>S.BUS\u4fe1\u53f7\u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b</li> <li>S.BUS\u4fe1\u53f7\u3092\u53d7\u4fe1\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304a\u3088\u3073\u56de\u8def\u3092\u7406\u89e3\u3067\u304d\u308b</li> </ul>"},{"location":"arduino/SBUS/#sbus","title":"S.BUS\u3068\u306f","text":"<p>UART\u4fe1\u53f7\u3092\u53cd\u8ee2\u3057\u305f\u3082\u306e\u3067\u3042\u308b\uff0e UART\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3042\u308b\uff0e</p> <ul> <li>\u901a\u4fe1\u901f\u5ea6 : 100000bps</li> <li>\u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8 : 2bit</li> <li>\u30d1\u30ea\u30c6\u30a3 : even parity</li> </ul>"},{"location":"arduino/SBUS/#sbus_1","title":"S.BUS\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306e\u56de\u8def","text":"<p>S.BUS\u4fe1\u53f7\u3092UART\u4fe1\u53f7\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u306f\u4fe1\u53f7\u3092\u53cd\u8ee2\u3059\u308c\u3070\u3088\u3044\u305f\u3081\uff0cNOT\u56de\u8def\u3092\u5165\u308c\u308b\uff0e \u4eca\u56de\u306f\uff0cNucleo\u30dc\u30fc\u30c9\u306eCN3\u306eTX\u30d4\u30f3\u306bNOT\u56de\u8def\u306e\u51fa\u529b\u3092\u5165\u529b\u3059\u308b\uff0e </p>"},{"location":"arduino/SBUS/#_2","title":"\u30b3\u30fc\u30c9\u89e3\u8aac","text":""},{"location":"arduino/SBUS/#whileserialavailablesbus_len","title":"<code>while(Serial.available()&lt;SBUS_LEN)</code>","text":"<p>S.BUS\u4fe1\u53f7\u306e\u9577\u3055\u304c25byte\u3067\u3042\u308b\u305f\u3081\uff0c25byte\u3054\u3068\u306b\u53d7\u4fe1\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u5f85\u6a5f\u3059\u308b\uff0e</p>"},{"location":"arduino/SBUS/#serialwriteuint8_t-sbusreceivefrontsbus_len","title":"<code>Serial.write((uint8_t *)sbusReceive.front(),SBUS_LEN)</code>","text":"<p>\u53d7\u4fe1\u3057\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u9001\u4fe1\u3059\u308b\uff0e</p>"},{"location":"arduino/SBUS/#digitalwrite13-digitalread13","title":"<code>digitalWrite(13, !digitalRead(13))</code>","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u78ba\u8a8d\u7528\u306e\u30b3\u30fc\u30c9\uff0e\u6b63\u5e38\u52d5\u4f5c\u6642\u306f\uff0cLED\u304c\u9ad8\u901f\u3067\u70b9\u6ec5\u3059\u308b\uff0e\u4eba\u306e\u76ee\u306b\u306f\u70b9\u706f\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\uff0e \u4e0a\u624b\u304f\u52d5\u3044\u3066\u3044\u306a\u3044\u3068\u304d\u306f\uff0c\u6d88\u706f\u3082\u3057\u304f\u306f\u70b9\u706f\u3059\u308b\uff0e</p>"},{"location":"arduino/SBUS/#_3","title":"\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u7d50\u679c","text":""},{"location":"arduino/SBUS/#led","title":"LED\u306e\u70b9\u6ec5","text":"<p>\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u5834\u5408\u306f\uff0cLED\u304c\u304a\u3088\u305d70Hz\u3067\u70b9\u6ec5\u3059\u308b\uff0e \u53d7\u4fe1\u306b\u5931\u6557\u3057\u3066\u3044\u308b\u5834\u5408\u306f\uff0cLED\u304c\u70b9\u706f\u3082\u3057\u304f\u306f\u6d88\u706f\u3059\u308b\uff0e</p>"},{"location":"arduino/SBUS/#source-code","title":"Source code","text":"<pre><code>#include &lt;array&gt;\n\nconstexpr int SBUS_LEN = 25;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(100000, SERIAL_8E2);\n  pinMode(13, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  while(Serial.available()&lt;SBUS_LEN);\n  std::array&lt;uint8_t, SBUS_LEN&gt; sbusReceive;\n  Serial.readBytes((uint8_t *)sbusReceive.front(),SBUS_LEN);\n  Serial.write((uint8_t *)sbusReceive.front(),SBUS_LEN);\n  digitalWrite(13, !digitalRead(13));\n}\n</code></pre>"},{"location":"arduino/environment/","title":"1. \u74b0\u5883\u69cb\u7bc9","text":"<p>Arduino web\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 https://www.arduino.cc/en/software</p> <p>Arduino IDE\u3092\u516c\u5f0fHP\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e</p>"},{"location":"arduino/environment/#nucleo64","title":"Nucleo64\u30dc\u30fc\u30c9\u5411\u3051\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 https://github.com/stm32duino/Arduino_Core_STM32/wiki/Getting-Started</p> <ol> <li>File (\u30d5\u30a1\u30a4\u30eb)\u304b\u3089Preferences (\u57fa\u672c\u8a2d\u5b9a)\u3092\u958b\u304f</li> <li>Additional boards managers URLs (\u8ffd\u52a0\u306e\u30dc\u30fc\u30c9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306eURL)\u306b<code>https://github.com/stm32duino/BoardManagerFiles/raw/main/package_stmicroelectronics_index.json</code>\u3092\u8ffd\u8a18\u3059\u308b</li> <li>BOARDS MANAGER (\u30dc\u30fc\u30c9\u30de\u30cd\u30fc\u30b8\u30e3)\u3067STM32\u3068\u691c\u7d22\u3057\uff0cSTM32 MCU based boards\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b</li> </ol> <p></p>"},{"location":"arduino/serial/","title":"3. UART\u901a\u4fe1(serial)","text":""},{"location":"arduino/serial/#_1","title":"\u76ee\u6a19","text":"<ul> <li>Serial\u306e\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u3092\u4f7f\u3048\u308b\u3088\u3046\u306a\u306a\u308b</li> <li>Arduino IDE\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3076</li> </ul>"},{"location":"arduino/serial/#_2","title":"\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3068\u306f","text":""},{"location":"arduino/serial/#_3","title":"\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306e\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"arduino/serial/#_4","title":"\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3068\u306f","text":"<p>PC\u304c\u30de\u30a4\u30b3\u30f3\u304b\u3089\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3057\u305f\u308a\uff0cPC\u304b\u3089\u30de\u30a4\u30b3\u30f3\u3078\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308b\uff0e  </p>"},{"location":"arduino/serial/#_5","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ul> <li>\u753b\u9762\u53f3\u4e0a\u306e\u30dc\u30bf\u30f3\u3082\u3057\u304f\u306f\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u30c4\u30fc\u30eb\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u958b\u304f<ul> <li>\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306f\u753b\u9762\u4e0b\u90e8\u306b\u8868\u793a\u3055\u308c\u308b</li> </ul> </li> <li>\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306e\u4e0a\u90e8\u306b\u306fPC\u304b\u3089\u9001\u4fe1\u3059\u308b\u6587\u5b57\u5217\u3092\u5165\u529b\u3059\u308b\u30dc\u30c3\u30af\u30b9\u3068\u9001\u4fe1\u6587\u5b57\u5217\u306e\u6539\u884c\u30b3\u30fc\u30c9\uff0c\u901a\u4fe1\u901f\u5ea6\u306e\u8a2d\u5b9a\u304c\u3042\u308b<ul> <li>\u901a\u4fe1\u901f\u5ea6\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u6307\u5b9a\u3057\u305f\u5024(9600bps)\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b</li> </ul> </li> <li>\u53d7\u4fe1\u3057\u305f\u6587\u5b57\u5217\u306f\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306b\u8868\u793a\u3055\u308c\u308b </li> </ul>"},{"location":"arduino/serial/#_6","title":"\u305d\u306e\u4ed6","text":"<p>Arduino IDE\u306b\u5185\u8535\u3055\u308c\u3066\u3044\u308b\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u4ee5\u5916\u306b\u3082\u69d8\u3005\u306a\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304c\u5b58\u5728\u3059\u308b\uff0e Arduino IDE\u5185\u8535\u306e\u3082\u306e\u3067\u306f\uff0c\u6587\u5b57\u5217\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u306b\u306f\u9069\u3055\u306a\u3044\uff0e \u30c7\u30d0\u30c3\u30af\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u305fTera Term\u3084YAT, CuteCom\u306a\u3069\u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\uff0c\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3068\u3057\u3066\u306e\u81ea\u7531\u5ea6\u306f\u9ad8\u3044\uff0e</p>"},{"location":"arduino/serial/#_7","title":"\u30b3\u30fc\u30c9\u89e3\u8aac","text":""},{"location":"arduino/serial/#void-serialbeginunsigned-long-baud-byte-config","title":"<code>void Serial.begin(unsigned long baud, byte config)</code>","text":"<p>\u7b2c1\u5f15\u6570\u3067\u306f\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u901a\u4fe1\u901f\u5ea6\u3092\u6c7a\u5b9a\u3059\u308b\uff0e9600\u3084115200\u304c\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\uff0e \u7b2c2\u5f15\u6570\u306f\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6c7a\u5b9a\u3059\u308b\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u7701\u7565\u3057\u3066\u69cb\u308f\u306a\u3044\uff0e \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3064\u3044\u3066\u306f\u5225\u9014\uff0c\u89e3\u8aac\u3059\u308b\uff0e</p>"},{"location":"arduino/serial/#size_t-serialprintlnconst-string-s","title":"<code>size_t Serial.println(const String &amp;s)</code>","text":"<p>\u7b2c\uff11\u5f15\u6570\u306b\u9001\u4fe1\u3057\u305f\u3044\u6587\u5b57\u5217\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u6587\u5b57\u5217\u306e\u9001\u4fe1\u3092\u3059\u308b\uff0e \u3053\u306e\u95a2\u6570\u3067\u306f\u9001\u4fe1\u6587\u5b57\u5217\u306e\u6700\u5f8c\u306b\u6539\u884c\u30b3\u30fc\u30c9\u304c\u81ea\u52d5\u3067\u8ffd\u52a0\u3055\u308c\u308b\uff0e \u5f15\u6570\u306e\u578b\u306f\u3044\u304f\u3064\u304b\u3042\u308a\uff0cString\u578b\u4ee5\u5916\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u306a\u306e\u3067\u8abf\u3079\u3066\u4f7f\u3063\u3066\u6b32\u3057\u3044\uff0e</p>"},{"location":"arduino/serial/#size_t-serialprintconst-string-s","title":"<code>size_t Serial.print(const String &amp;s)</code>","text":"<p>\u7b2c\uff11\u5f15\u6570\u306b\u9001\u4fe1\u3057\u305f\u3044\u6587\u5b57\u5217\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u6587\u5b57\u5217\u306e\u9001\u4fe1\u3092\u3059\u308b\uff0e \u5f15\u6570\u306e\u578b\u306f\u3044\u304f\u3064\u304b\u3042\u308a\uff0cString\u578b\u4ee5\u5916\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u306a\u306e\u3067\u8abf\u3079\u3066\u4f7f\u3063\u3066\u6b32\u3057\u3044\uff0e</p>"},{"location":"arduino/serial/#int-serialavailable","title":"<code>int Serial.available()</code>","text":"<p>Serial\u901a\u4fe1\u3067\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u306e\u9577\u3055\u3092\u53d6\u5f97\u3059\u308b\uff0e\u8fd4\u308a\u5024\u304c0\u3067\u306a\u3044\u3068\u304d\u306f\uff0c\u4f55\u304b\u3057\u3089\u306e\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\u3067\u3042\u308b\uff0e</p> <p><code>while(!Serial.available());</code>\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e</p>"},{"location":"arduino/serial/#string-serialreadstring","title":"<code>String Serial.readString()</code>","text":"<p>Serial\u901a\u4fe1\u3067\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3042\u308b\uff0e</p>"},{"location":"arduino/serial/#stringtrim-strtrim","title":"<code>String::trim()</code> (<code>str.trim()</code>)","text":"<p>\u53d7\u4fe1\u3057\u305f\u6587\u5b57\u5217\u306e\u6700\u5f8c\u306b\u3064\u3044\u3066\u3044\u308b\u6539\u884c\u30b3\u30fc\u30c9\u3092\u5207\u308a\u53d6\u308b\u305f\u3081\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\uff0e</p>"},{"location":"arduino/serial/#_8","title":"\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u7d50\u679c","text":"<p>\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u958b\u3044\u305f\u72b6\u614b\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u3080\u3068\uff08\u30de\u30a4\u30b3\u30f3\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3068\uff09\u306f\u3058\u3081\u306b\u300cHello world\u300d\u3068\u8868\u793a\u3055\u308c\u308b\uff0e 2\u884c\u76ee\u306b\u306f\u300cwaiting...\u300d\u3068\u8868\u793a\u3055\u308c\uff0c\u30de\u30a4\u30b3\u30f3\u306f\u6587\u5b57\u5217\u306e\u53d7\u4fe1\u5f85\u6a5f\u72b6\u614b\u3068\u306a\u308b\uff0e \u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u300c\u4efb\u610f\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u300d\u3092\u9001\u4fe1\u3059\u308b\u3068\uff0c\u300cReceived: \u4efb\u610f\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u300d\u3068\u8868\u793a\u3055\u308c\u308b\uff0e</p>"},{"location":"arduino/serial/#source-code","title":"Source Code","text":"<pre><code>void setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600, SERIAL_8N1);\n\n  Serial.println(\"hello world\");\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  Serial.println(\"waiting...\");\n  String str;\n  while(!Serial.available());\n  str = Serial.readString();\n  str.trim();\n  Serial.print(\"Receive : \");\n  Serial.println(str);\n}\n</code></pre>"},{"location":"arduino/servo/","title":"4. SERVO","text":""},{"location":"arduino/servo/#_1","title":"\u76ee\u6a19","text":"<ul> <li>\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u3092\u5236\u5fa1\u3059\u308b\u539f\u7406\u3092\u7fd2\u5f97\u3059\u308b</li> <li>\u30de\u30a4\u30b3\u30f3\u304b\u3089\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b</li> </ul>"},{"location":"arduino/servo/#_2","title":"\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u306e\u5236\u5fa1\u65b9\u6cd5","text":"<p>\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u306f\u4fe1\u53f7\u7dda\u306bPWM\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u5236\u5fa1\u3059\u308b\uff0e PWM\u306e\u30d1\u30eb\u30b9\u5e45\u3068\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u306e\u89d2\u5ea6\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u308b\uff0e PWM\u306e\u5468\u671f\u306f\u304a\u3088\u305d2500us\u3067\u3042\u308a\uff0c\u4f7f\u7528\u3059\u308b\u30d1\u30eb\u30b9\u5e45\u306f500us\u304b\u30892200us\u3067\u3042\u308b\uff0e</p>"},{"location":"arduino/servo/#_3","title":"\u30b3\u30fc\u30c9\u89e3\u8aac","text":""},{"location":"arduino/servo/#servo-servo","title":"<code>Servo servo;</code>","text":"<p><code>Servo</code>\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\uff0e \u30af\u30e9\u30b9(class)\u306fc++\u306e\u6a5f\u80fd\u306e1\u3064\u3067\uff0cc\u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u306b\u4f3c\u305f\u3082\u306e\u3067\u3042\u308b\uff0e \u95a2\u6570\u3068\u5909\u6570\u30921\u3064\u306e\u307e\u3068\u307e\u308a\u3068\u3057\u3066\uff0c\u65b0\u3057\u3044\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\uff0e</p>"},{"location":"arduino/servo/#servoattach7","title":"<code>servo.attach(7)</code>","text":"<p>D7\u30d4\u30f3\u3092\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u306b\u63a5\u7d9a\u3057\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\uff0e</p>"},{"location":"arduino/servo/#servowritemicrosecondsint-value","title":"<code>servo.writeMicroseconds(int value)</code>","text":"<p>PWM\u306e\u30d1\u30eb\u30b9\u5e45\u3092\u30df\u30ea\u79d2\u5358\u4f4d\u3067\u8a2d\u5b9a\u3059\u308b\uff0e\u6700\u5927\u5024\u306f<code>2500</code>\u304f\u3089\u3044\u306e\u306f\u305a\uff0e</p>"},{"location":"arduino/servo/#source-code","title":"Source Code","text":"<pre><code>#include &lt;Servo.h&gt; \n\nServo servo;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n  servo.attach(7);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  static uint16_t count = 0;\n  uint16_t value = (500*sin(count++/1000.0*2.0*M_PI)+1600);\n\n  servo.writeMicroseconds(value);\n  Serial.println(value);\n  delay(2);\n}\n</code></pre>"}]}